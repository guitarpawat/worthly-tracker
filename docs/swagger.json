{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "title": "Worthly Tracker",
        "contact": {
            "name": "Pawat Nakpiphatkul",
            "url": "https://github.com/guitarpawat/worthly-tracker/issues"
        }
    },
    "host": "localhost:8080",
    "paths": {
        "/api/records/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "record"
                ],
                "summary": "Add or edit record at specified date",
                "parameters": [
                    {
                        "description": "See field descriptions for more details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/router.postRecordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success to create/edit records"
                    },
                    "400": {
                        "description": "Input validation failed"
                    },
                    "500": {
                        "description": "Generic server error"
                    }
                }
            }
        },
        "/api/records/draft": {
            "get": {
                "description": "Filter only @DB: asset_types.isActive = true and @DB: assets.isActive = true as @DTO: AssetRecord\nThen prefill  @DTO: AssetRecord with the data from the latest @DB: records, null if there is no data of the asset found.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "record"
                ],
                "summary": "Get record draft for making a new record date",
                "responses": {
                    "200": {
                        "description": "Get draft successfully",
                        "schema": {
                            "$ref": "#/definitions/model.AssetTypeRecord"
                        }
                    },
                    "500": {
                        "description": "Generic server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AssetRecord": {
            "type": "object",
            "properties": {
                "assetId": {
                    "type": "integer",
                    "example": 1
                },
                "boughtValue": {
                    "type": "string",
                    "example": "100.00"
                },
                "broker": {
                    "type": "string",
                    "example": "SCBAM"
                },
                "currentValue": {
                    "type": "string",
                    "example": "101.50"
                },
                "defaultIncrement": {
                    "type": "string",
                    "example": "0.00"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "BTP"
                },
                "note": {
                    "type": "string",
                    "example": "Something worth mention"
                },
                "realizedValue": {
                    "type": "string",
                    "example": "0.00"
                }
            }
        },
        "model.AssetTypeRecord": {
            "type": "object",
            "properties": {
                "assets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AssetRecord"
                    }
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "isCash": {
                    "type": "boolean",
                    "example": false
                },
                "isLiability": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "Mutual Funds"
                }
            }
        },
        "router.postRecordRequest": {
            "type": "object",
            "properties": {
                "assets": {
                    "description": "Assets contains information about records to be added or edited\nIgnore fields: name, isCash, isLiability, assets[].name, assets[].broker, assets[].category, assets[].defaultIncrement\nUse assets[].id (update) or assets[].assetId (insert) for reference\nUpdate fields: assets[].assetId, assets[].boughtValue, assets[].currentValue, assets[].realizedValue, assets[].note",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AssetRecord"
                    }
                },
                "date": {
                    "description": "Date to be added or edited",
                    "type": "string",
                    "format": "date"
                }
            }
        }
    }
}